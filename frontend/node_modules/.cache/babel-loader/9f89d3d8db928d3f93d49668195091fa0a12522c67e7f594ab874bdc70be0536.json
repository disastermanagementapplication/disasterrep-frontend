{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: (token, newPassword) => api.post('/auth/reset-password', {\n    resetToken: token,\n    newPassword\n  })\n};\n\n// Reports API\nexport const reportsAPI = {\n  getAll: () => api.get('/reports'),\n  getById: id => api.get(`/reports/${id}`),\n  create: reportData => api.post('/reports', reportData),\n  update: (id, reportData) => api.put(`/reports/${id}`, reportData),\n  delete: id => api.delete(`/reports/${id}`),\n  getStats: () => api.get('/reports/stats/data')\n};\n\n// Profile API\nexport const profileAPI = {\n  get: () => api.get('/profile'),\n  update: userData => api.put('/profile', userData),\n  changePassword: passwordData => api.put('/profile/password', passwordData)\n};\n\n// Admin API\nexport const adminAPI = {\n  // Reports\n  getAllReports: () => api.get('/admin/reports'),\n  updateReportStatus: (id, status) => api.put(`/admin/reports/${id}/status`, {\n    status\n  }),\n  deleteReport: id => api.delete(`/admin/reports/${id}`),\n  // Users\n  getAllUsers: () => api.get('/admin/users'),\n  updateUserRole: (id, role) => api.put(`/admin/users/${id}/role`, {\n    role\n  }),\n  deactivateUser: id => api.put(`/admin/users/${id}/deactivate`),\n  nominateSuperadmin: id => api.post(`/admin/users/${id}/nominate-superadmin`),\n  verifySuperadminCode: code => api.get(`/admin/verify-superadmin`, {\n    params: {\n      code\n    },\n    headers: {\n      Accept: 'application/json'\n    }\n  }),\n  // Stats & Logs\n  getStats: () => api.get('/admin/stats'),\n  getAuditLogs: () => api.get('/admin/audit-logs')\n};\n\n// Upload API\nexport const uploadAPI = {\n  uploadFile: formData => api.post('/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","forgotPassword","email","resetPassword","newPassword","resetToken","reportsAPI","getAll","get","getById","id","reportData","update","put","delete","getStats","profileAPI","changePassword","passwordData","adminAPI","getAllReports","updateReportStatus","deleteReport","getAllUsers","updateUserRole","role","deactivateUser","nominateSuperadmin","verifySuperadminCode","code","params","Accept","getAuditLogs","uploadAPI","uploadFile","formData"],"sources":["C:/Users/succe/Downloads/Disasterreportsmanagement/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (token, newPassword) => api.post('/auth/reset-password', { resetToken: token, newPassword }),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  getAll: () => api.get('/reports'),\r\n  getById: (id) => api.get(`/reports/${id}`),\r\n  create: (reportData) => api.post('/reports', reportData),\r\n  update: (id, reportData) => api.put(`/reports/${id}`, reportData),\r\n  delete: (id) => api.delete(`/reports/${id}`),\r\n  getStats: () => api.get('/reports/stats/data'),\r\n};\r\n\r\n// Profile API\r\nexport const profileAPI = {\r\n  get: () => api.get('/profile'),\r\n  update: (userData) => api.put('/profile', userData),\r\n  changePassword: (passwordData) => api.put('/profile/password', passwordData),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  // Reports\r\n  getAllReports: () => api.get('/admin/reports'),\r\n  updateReportStatus: (id, status) => api.put(`/admin/reports/${id}/status`, { status }),\r\n  deleteReport: (id) => api.delete(`/admin/reports/${id}`),\r\n  \r\n  // Users\r\n  getAllUsers: () => api.get('/admin/users'),\r\n  updateUserRole: (id, role) => api.put(`/admin/users/${id}/role`, { role }),\r\n  deactivateUser: (id) => api.put(`/admin/users/${id}/deactivate`),\r\n  nominateSuperadmin: (id) => api.post(`/admin/users/${id}/nominate-superadmin`),\r\n  verifySuperadminCode: (code) => api.get(`/admin/verify-superadmin`, { params: { code }, headers: { Accept: 'application/json' } }),\r\n  \r\n  // Stats & Logs\r\n  getStats: () => api.get('/admin/stats'),\r\n  getAuditLogs: () => api.get('/admin/audit-logs'),\r\n};\r\n\r\n// Upload API\r\nexport const uploadAPI = {\r\n  uploadFile: (formData) => api.post('/upload', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }),\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}