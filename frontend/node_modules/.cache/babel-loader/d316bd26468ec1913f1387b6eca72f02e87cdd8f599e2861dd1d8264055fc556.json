{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Create axios instance\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401||((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){localStorage.removeItem('authToken');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});// Auth API\nexport const authAPI={login:credentials=>api.post('/auth/login',credentials),register:userData=>api.post('/auth/register',userData),forgotPassword:email=>api.post('/auth/forgot-password',{email}),resetPassword:(token,newPassword)=>api.post('/auth/reset-password',{resetToken:token,newPassword})};// Reports API\nexport const reportsAPI={getAll:()=>api.get('/reports'),getById:id=>api.get(\"/reports/\".concat(id)),create:reportData=>api.post('/reports',reportData),update:(id,reportData)=>api.put(\"/reports/\".concat(id),reportData),delete:id=>api.delete(\"/reports/\".concat(id)),getStats:()=>api.get('/reports/stats/data')};// Profile API\nexport const profileAPI={get:()=>api.get('/profile'),update:userData=>api.put('/profile',userData),changePassword:passwordData=>api.put('/profile/password',passwordData)};// Admin API\nexport const adminAPI={// Reports\ngetAllReports:()=>api.get('/admin/reports'),updateReportStatus:(id,status)=>api.put(\"/admin/reports/\".concat(id,\"/status\"),{status}),deleteReport:id=>api.delete(\"/admin/reports/\".concat(id)),// Users\ngetAllUsers:()=>api.get('/admin/users'),updateUserRole:(id,role)=>api.put(\"/admin/users/\".concat(id,\"/role\"),{role}),deactivateUser:id=>api.put(\"/admin/users/\".concat(id,\"/deactivate\")),nominateSuperadmin:id=>api.post(\"/admin/users/\".concat(id,\"/nominate-superadmin\")),verifySuperadmin:_ref=>{let{email,code}=_ref;return api.post(\"/admin/verify-superadmin\",{email,code},{headers:{Accept:'application/json'}});},// Stats & Logs\ngetStats:()=>api.get('/admin/stats'),getAuditLogs:()=>api.get('/admin/audit-logs')};// Upload API\nexport const uploadAPI={uploadFile:formData=>api.post('/upload',formData,{headers:{'Content-Type':'multipart/form-data'}})};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","forgotPassword","email","resetPassword","newPassword","resetToken","reportsAPI","getAll","get","getById","id","reportData","update","put","delete","getStats","profileAPI","changePassword","passwordData","adminAPI","getAllReports","updateReportStatus","deleteReport","getAllUsers","updateUserRole","role","deactivateUser","nominateSuperadmin","verifySuperadmin","_ref","code","Accept","getAuditLogs","uploadAPI","uploadFile","formData"],"sources":["C:/Users/succe/Downloads/disasterApp-frontends/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle auth errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401 || error.response?.status === 403) {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (token, newPassword) => api.post('/auth/reset-password', { resetToken: token, newPassword }),\r\n};\r\n\r\n// Reports API\r\nexport const reportsAPI = {\r\n  getAll: () => api.get('/reports'),\r\n  getById: (id) => api.get(`/reports/${id}`),\r\n  create: (reportData) => api.post('/reports', reportData),\r\n  update: (id, reportData) => api.put(`/reports/${id}`, reportData),\r\n  delete: (id) => api.delete(`/reports/${id}`),\r\n  getStats: () => api.get('/reports/stats/data'),\r\n};\r\n\r\n// Profile API\r\nexport const profileAPI = {\r\n  get: () => api.get('/profile'),\r\n  update: (userData) => api.put('/profile', userData),\r\n  changePassword: (passwordData) => api.put('/profile/password', passwordData),\r\n};\r\n\r\n// Admin API\r\nexport const adminAPI = {\r\n  // Reports\r\n  getAllReports: () => api.get('/admin/reports'),\r\n  updateReportStatus: (id, status) => api.put(`/admin/reports/${id}/status`, { status }),\r\n  deleteReport: (id) => api.delete(`/admin/reports/${id}`),\r\n  \r\n  // Users\r\n  getAllUsers: () => api.get('/admin/users'),\r\n  updateUserRole: (id, role) => api.put(`/admin/users/${id}/role`, { role }),\r\n  deactivateUser: (id) => api.put(`/admin/users/${id}/deactivate`),\r\n  nominateSuperadmin: (id) => api.post(`/admin/users/${id}/nominate-superadmin`),\r\n  verifySuperadmin: ({ email, code }) => api.post(`/admin/verify-superadmin`, { email, code }, { headers: { Accept: 'application/json' } }),\r\n  \r\n  // Stats & Logs\r\n  getStats: () => api.get('/admin/stats'),\r\n  getAuditLogs: () => api.get('/admin/audit-logs'),\r\n};\r\n\r\n// Upload API\r\nexport const uploadAPI = {\r\n  uploadFile: (formData) => api.post('/upload', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }),\r\n};\r\n\r\nexport default api;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}