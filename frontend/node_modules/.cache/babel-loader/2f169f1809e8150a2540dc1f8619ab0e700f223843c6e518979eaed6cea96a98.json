{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\succe\\\\Downloads\\\\Disasterreportsmanagement\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing auth on mount\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      try {\n        const parsedUser = JSON.parse(user);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: {\n            token,\n            user: parsedUser\n          }\n        });\n      } catch (error) {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('user');\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    } else {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success('Account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const updateUser = userData => {\n    const updatedUser = {\n      ...state.user,\n      ...userData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const isAdmin = () => {\n    var _state$user, _state$user2;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'admin' || ((_state$user2 = state.user) === null || _state$user2 === void 0 ? void 0 : _state$user2.role) === 'superadmin';\n  };\n  const isSuperAdmin = () => {\n    var _state$user3;\n    return ((_state$user3 = state.user) === null || _state$user3 === void 0 ? void 0 : _state$user3.role) === 'superadmin';\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAdmin,\n    isSuperAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","isAuthenticated","isLoading","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","localStorage","getItem","parsedUser","JSON","parse","error","removeItem","login","credentials","response","data","setItem","stringify","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","updateUser","updatedUser","isAdmin","_state$user","_state$user2","role","isSuperAdmin","_state$user3","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/succe/Downloads/Disasterreportsmanagement/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check for existing auth on mount\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    const user = localStorage.getItem('user');\r\n    \r\n    if (token && user) {\r\n      try {\r\n        const parsedUser = JSON.parse(user);\r\n        dispatch({\r\n          type: 'LOGIN_SUCCESS',\r\n          payload: { token, user: parsedUser },\r\n        });\r\n      } catch (error) {\r\n        localStorage.removeItem('authToken');\r\n        localStorage.removeItem('user');\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    } else {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await authAPI.login(credentials);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { token, user },\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await authAPI.register(userData);\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { token, user },\r\n      });\r\n      \r\n      toast.success('Account created successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    const updatedUser = { ...state.user, ...userData };\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    dispatch({ type: 'UPDATE_USER', payload: userData });\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return state.user?.role === 'admin' || state.user?.role === 'superadmin';\r\n  };\r\n\r\n  const isSuperAdmin = () => {\r\n    return state.user?.role === 'superadmin';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n    isAdmin,\r\n    isSuperAdmin,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}